.show.col-md-8.col-md-offset-2.col-sm-10.col-sm-offset-1
  .full-post
    .header
      %h1.title
        = raw @post['title']
      .subtitle
        .author
          = "Posted by: #{@post['author']['name']}"
        .date
          = post_date(@post)

    .content
      = raw @post['content']

    .comments
      .header
        %h2.title
          Comments?

      .add_comment
        = simple_form_for :comment, 
              :url => "/posts/#{@post['ID']}/comment", 
              :remote => true do |f|
          = f.input :content, :as => 'text', :placeholder => 'Add your comment', :input_html => {:class => 'comment_text'}, :label => false

          .comment_metadata
            .row
              = f.hidden_field :post_id, :value => @post['ID']
              = f.input :name, :as => 'string', :placeholder => 'Name', :input_html => {:class => 'comment_field hidden col-md-6 col-sm-1'}, :label => false
              = f.input :email, :as => 'string', :placeholder => 'Email (will not be displayed)', :input_html => {:class => 'comment_field hidden col-md-6 col-sm-1'}, :label => false
            = f.submit 'Post', :class => 'btn comment_field hidden submit'

      .comment_list
        - @comments.each do |comment|
          = render '/comments/comment', :comment => comment





:javascript
  $(function()
  {
    $('.alignnone').attr('style', '');

    window.ADD_COMMENT_BOX = function() {}
    ADD_COMMENT_BOX.prototype = {

      expanded: false,

      init: function()
      {
        this.initialize_focus_events();
        this.initialize_submit();
      },

      initialize_focus_events: function()
      {
        var current_inst = this;
        $('.comment_text').on('focus', function()
        {
          var $this = $(this);
          $('.comment_field').removeClass('hidden');
          if (!current_inst.expanded)
          {
            $this.animate({height:'+=32px'}, 'linear');
            current_inst.expanded = true;
          }
          
        });

        $('.comment_text').on('blur', function()
        {
          var $this = $(this);
          if ($this.val().length <= 0)
          {
            $this.animate({height:'-=32px'}, 'linear');
            current_inst.expanded = false;
          }
        });
      },

      initialize_submit: function()
      {

        $("form.simple_form").submit(function(event) 
        {
          var $form = $( this ),
              url = $form.attr( 'action' );

          $form.bind("ajax:success", function(event, data, status, xhr) 
          {
            $('.add_comment').html('<div class="thanks"><p>Thanks for posting!</p></div>').show('slide');
            $('.comment_list').prepend(data);
          });

        });
      }
    };

    var comment_box = new ADD_COMMENT_BOX();
    comment_box.init();
  })